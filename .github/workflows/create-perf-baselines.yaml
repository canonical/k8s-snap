name: Create Performance Baselines
description: |
  This workflow creates performance baselines on the specified runner tags
  and creates a baseline for future comparisons. It uses pytest-benchmark to run the tests
  and save the results.
  It also creates a pull request with the results

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/create-perf-baselines.yaml
      - tests/integration/tests/performance/*.py

permissions:
  contents: read

jobs:
  baselines:
    name: Create Baselines for ${{ matrix.os }}-${{ matrix.arch }}
    strategy:
      matrix:
        os: ["ubuntu:22.04", "ubuntu:24.04"]
        arch: ["amd64", "arm64"]
    runs-on: ${{ inputs.arch == 'arm64' && 'self-hosted-linux-arm64-noble-large' || 'self-hosted-linux-amd64-noble-large' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install lxd
        uses: ./.github/actions/install-lxd
      - name: Install tox
        run: sudo apt-get install -y tox
      - name: Prepare baseline name
        run: |
          echo "baseline_name=${{ matrix.os }}-${{ matrix.arch }}.json" | sed 's/[:]/-/g' >> $GITHUB_ENV
      - name: Download k8s-snap
        id: download-snap
        uses: ./.github/actions/download-k8s-snap
        with:
          channel: latest/edge
      - name: Create performance baselines
        env:
          TEST_SNAP: ${{ steps.download-snap.outputs.snap-path }}
          TEST_SUBSTRATE: lxd
          TEST_LXD_IMAGE: ${{ matrix.os }}
        run: |
          cd tests/integration && sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- tox -e integration -- --tags performance \
            --benchmark-storage baselines \
            --benchmark-save "${{ env.baseline_name }}"
      - name: Upload baseline results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.baseline_name }}
          path: tests/integration/baselines/**/*.json

  create_pr:
    name: Create PR with baseline results
    permissions:
      contents: write # for peter-evans/create-pull-request to create branch
      pull-requests: write # for peter-evans/create-pull-request to create a PR
    runs-on: ubuntu-latest
    needs: baselines
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: tests/integration/tests/performance/baselines
      - name: Commit and create PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "test: Update performance baseline results"
          title: "test: Automatic Performance Baselines update"
          body: "Update performance baselines because of changed performance tests"
          branch: performance/baseline-updates
          base: ${{ github.head_ref || github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
