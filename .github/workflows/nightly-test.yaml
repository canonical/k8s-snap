name: Nightly

on:
  schedule:
    - cron: "0 0 * * *" # Runs every midnight
  pull_request:
    paths:
      - .github/workflows/e2e-tests.yaml
      - .github/workflows/security-scan.yaml
      - .github/workflows/nightly-test.yaml

permissions:
  contents: read
  actions: read

jobs:
  test-integration:
    name: Integration
    strategy:
      matrix:
        os: ["ubuntu:22.04", "ubuntu:24.04"]
        arch: ["amd64", "arm64"]
        # TODO(ben): Automatically fetch all supported releases.
        channel:
          [
            "latest/edge",
            "1.34-classic/edge",
            "1.33-classic/edge",
            "1.32-classic/edge",
          ]
      fail-fast: false
    uses: ./.github/workflows/e2e-tests.yaml
    with:
      arch: ${{ matrix.arch }}
      os: ${{ matrix.os }}
      channel: ${{ matrix.channel }}
      test-tags: "up_to_nightly"
      runner-tags: '{"e2e-test": ["self-hosted", "linux", "xlarge", "jammy"}'
      parallel: false
      upload-results: true

  test-performance:
    name: Run performance tests for ${{ matrix.os }}-${{ matrix.arch }}
    strategy:
      matrix:
        os: ["ubuntu:22.04", "ubuntu:24.04"]
        arch: ["amd64", "arm64"]
      fail-fast: false
    uses: ./.github/workflows/compare-performance.yaml
    with:
      arch: ${{ matrix.arch }}
      os: ${{ matrix.os }}
      channel-1: latest/edge
      channel-2: 1.32-classic/stable

  collect-results:
    name: Collect integration test results
    if: ${{ always() }}
    runs-on: ubuntu-24.04
    needs: [test-integration]
    outputs:
      matrix: ${{ steps.aggregate.outputs.matrix }}
    steps:
      - uses: actions/download-artifact@v4
      - run: |
          results=$(find . -type f -name 'result.json' -exec cat {} \; | jq -c --slurp .)
          echo "$results" > aggregated-results.json
          echo "matrix=$results" >> $GITHUB_OUTPUT
        id: aggregate
      - uses: actions/upload-artifact@v4
        with:
          name: aggregated-results
          path: aggregated-results.json

  Mattermost:
    name: Notify Mattermost
    # Notify on success or failure but only if the event is a scheduled run.
    # We don't want to ping people of failed PRs.
    if: ${{ always() }} #&& github.event_name == 'schedule' }}
    needs: [test-integration, test-performance, collect-results]
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install tox
      run: sudo apt-get install -y tox
    - name: Download integration test results
      uses: actions/download-artifact@v4
      with:
        name: aggregated-results
    - name: Aggregate and post results
      working-directory: k8s/scripts/k8s-ci
      shell: bash
      run: |
        tox -e k8s-ci -- mattermost results-message \
          --webhook ${{ secrets.MATTERMOST_BOT_WEBHOOK_URL }} \
          --file ${{ github.workspace }}/aggregated-results.json
