name: Run k8s-snap e2e tests

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      arch:
        description: Job runner architecture (amd64 or arm64)
        default: amd64
        type: string
      # Download k8s-snap using either a GH action artifact or a snap channel.
      artifact:
        description: The name of a GH action artifact.
        type: string
      channel:
        description: k8s snap channel.
        type: string
      charm-channel:
        description: k8s charm channel.
        type: string
        default: latest/edge

jobs:
  charm-e2e-tests:
    name: Test ${{ inputs.arch }} ${{ inputs.artifact }}
    runs-on: ${{ inputs.arch == 'arm64' && 'self-hosted-linux-arm64-jammy-large' || 'self-hosted-linux-amd64-jammy-large' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Download k8s-snap
        id: download-snap
        uses: ./.github/actions/download-k8s-snap
        with:
          channel: ${{ inputs.channel }}
          artifact: ${{ inputs.artifact }}
      - name: Install lxd
        uses: ./.github/actions/install-lxd
      - name: Install tox
        run: pip install tox
      - name: Generate snap tarball
        run: |
          mkdir snap_installation
          mv ${{ steps.download-snap.outputs.snap-path }} snap_installation/k8s.snap
          cat > snap_installation/snap_installation.yaml <<EOF
          amd64:
            - install-type: file
              name: k8s
              filename: ./k8s.snap
              dangerous: true
              classic: true
          arm64:
            - install-type: file
              name: k8s
              filename: ./k8s.snap
              dangerous: true
              classic: true
          EOF
          tar cvzf snap_installation.tar.gz -C snap_installation/ .
      - name: Install charmcraft
        run: |
          sudo snap install charmcraft --classic
      - name: Install juju
        run: |
          sudo snap install juju --classic
      - name: Download charm ${{ inputs.charm-channel }}
        run: |
          juju download k8s \
            --channel ${{ inputs.charm-channel }} \
            --filepath k8s.charm
      - name: Bootstrap Juju controller (lxd)
        run: |
          juju bootstrap localhost lxd
      - uses: actions/checkout@v4
        with:
          repository: canonical/k8s-operator
          ref: main
          path: k8s-operator
      - name: Run e2e tests
        run: |
          charmFile=${GITHUB_WORKSPACE}/k8s.charm
          snapInstallRes=${GITHUB_WORKSPACE}/snap_installation.tar.gz
          set -x
          ls -lh $charmFile
          ls -lh $snapInstallRes
          cd k8s-operator
          sudo --user "$USER" --preserve-env --preserve-env=PATH \
            -- env -- \
            tox -e integration \
            -- \
            --lxd-containers --charm-file $charmFile \
            --snap-installation-resource $snapInstallRes
