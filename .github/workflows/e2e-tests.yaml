name: Run e2e tests

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      arch:
        description: Job runner architecture (amd64 or arm64)
        default: amd64
        type: string
      os:
        description: LXD image to use when running e2e tests
        default: ubuntu:24.04
        type: string
      # Download k8s-snap using either a GH action artifact or a snap channel.
      artifact:
        description: The name of a GH action artifact
        type: string
      channel:
        description: k8s snap channel
        type: string
      test-tags:
        description: Integration test filter tags (e.g. pull_request, up_to_weekly)
        default: pull_request
        type: string
      flavor:
        description: Test flavor (e.g. moonray or strict), leave empty for classic
        default: ""
        type: string
      extra-test-args:
        description: |
          Additional pytest arguments, use "-k <test_name>" to run a specific test
        default: ""
        type: string
  workflow_dispatch:
    inputs:
      arch:
        description: Job runner architecture (amd64 or arm64)
        default: amd64
        type: string
      os:
        description: LXD image to use when running e2e tests
        default: ubuntu:24.04
        type: string
      channel:
        description: k8s snap channel
        type: string
        default: latest/edge
      test-tags:
        description: Integration test filter tags (e.g. pull_request, up_to_weekly)
        default: pull_request
        type: string
      flavor:
        description: Test flavor (e.g. moonray or strict). Leave empty for classic
        default: ""
        type: string
      extra-test-args:
        description: Additional pytest arguments
        default: ""
        type: string
      tmate_enabled:
        type: boolean
        description: Start a tmate session before running the tests
        required: false
        default: false

jobs:
  test-integration:
    name: Tests
    runs-on: ${{ inputs.arch == 'arm64' && 'self-hosted-linux-arm64-noble-large' || 'self-hosted-linux-amd64-noble-large' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Generate job UUID
        # Use this UUID to ensure that the artifact names are unique.
        run: echo UUID=$(uuidgen) >> $GITHUB_ENV
      - name: Apply patches
        if: inputs.flavor != ''
        run: |
          ./build-scripts/patches/${{ inputs.flavor }}/apply
      - name: Download k8s-snap
        id: download-snap
        uses: ./.github/actions/download-k8s-snap
        with:
          channel: ${{ inputs.channel }}
          artifact: ${{ inputs.artifact }}
      - name: Install lxd
        uses: ./.github/actions/install-lxd
      - name: Install tox
        run: sudo apt-get install -y tox
      - name: Setup tmate session
        uses: canonical/action-tmate@main
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.tmate_enabled }}
      - name: Run e2e tests
        env:
          TEST_SNAP: ${{ steps.download-snap.outputs.snap-path }}
          TEST_SUBSTRATE: lxd
          TEST_LXD_IMAGE: ${{ inputs.os }}
          TEST_FLAVOR: ${{ inputs.flavor }}
          TEST_INSPECTION_REPORTS_DIR: ${{ github.workspace }}/inspection-reports
          TEST_VERSION_UPGRADE_CHANNELS: "recent 6"
          # TODO(etienne): change to "recent" when 1.33 is stable
          TEST_VERSION_DOWNGRADE_CHANNELS: "1.32-classic/stable 1.32-classic/beta 1.31-classic/stable 1.31-classic/beta"
          TEST_VERSION_UPGRADE_MIN_RELEASE: "1.32"
          TEST_STRICT_INTERFACE_CHANNELS: "recent 6 strict"
          TEST_MIRROR_LIST: '[{"name": "ghcr.io", "port": 5000, "remote": "https://ghcr.io", "username": "${{ github.actor }}", "password": "${{ secrets.GITHUB_TOKEN }}"}, {"name": "docker.io", "port": 5001, "remote": "https://registry-1.docker.io", "username": "", "password": ""}, {"name": "rocks.canonical.com", "port": 5002, "remote": "https://rocks.canonical.com/cdk"}]'
          TEST_GH_REF: ${{ github.ref_name }}
          TEST_GH_BASE_REF: ${{ github.base_ref }}
        run: |
          cd tests/integration && sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- tox -e integration -- --tags ${{ inputs.test-tags }} ${{ inputs.extra-test-args }}
      - name: Prepare inspection reports
        if: failure()
        run: |
          tar -czvf inspection-reports.tar.gz -C ${{ github.workspace }} inspection-reports
          echo "artifact_name=inspection-reports-${{ inputs.os }}-${{ inputs.arch }}" | sed 's/:/-/g' >> $GITHUB_ENV
      - name: Upload inspection report artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: ${{ github.workspace }}/inspection-reports.tar.gz
      - name: Upload CNCF conformance report artifact
        if: ${{ failure() && contains(inputs.test-tags, 'conformance_tests') }}
        uses: actions/upload-artifact@v4
        with:
         name: sonobuoy-e2e-${{ env.artifact_name }}
         path: tests/integration/sonobuoy_e2e.tar.gz
      - name: Upload html test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
         name: subunit-${{ env.UUID }}.html
         path: tests/integration/subunit.html
