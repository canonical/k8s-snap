name: Informing Integration Tests

on:
  # TODO(neoaggelos): needs updating the "Figure out target branch" below
  # push:
  #   branches:
  #     - main
  #     - 'release-[0-9]+.[0-9]+'
  #     - 'autoupdate/sync/**'
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.patch }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        patch: ["strict", "moonray"]
      fail-fast: false
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - name: Figure out target branch
        # ${{ steps.branch.outputs.upstream }} == "main", "release-1.30"
        # ${{ steps.branch.outputs.target }} == "moonray/main", "moonray/release-1.30"
        id: branch
        run: |
          echo "upstream=${{ github.base_ref }}" >> "$GITHUB_OUTPUT"
          echo "target=${{ matrix.patch }}/${{ github.base_ref }}" >> "$GITHUB_OUTPUT"
      - name: Checking out repo
        uses: actions/checkout@v4
      - name: Merge ${{ github.head_ref }} into ${{ steps.branch.outputs.target }}
        run: |
          git config user.name k8s-bot
          git config user.email k8s-bot@canonical.com

          git fetch origin

          git checkout ${{ github.head_ref }}
          git checkout ${{ steps.branch.outputs.target }}

          git merge ${{ github.head_ref }} -m "Auto-merge ${{ github.head_ref }}"
      - name: Install lxd
        run: |
          sudo snap refresh lxd --channel 5.21/stable
          sudo lxd init --auto
          sudo usermod --append --groups lxd $USER
          sg lxd -c 'lxc version'
      - name: Install snapcraft
        run: |
          sudo snap install snapcraft --classic
      - name: Build snap
        run: |
          sg lxd -c 'snapcraft --use-lxd'
          mv k8s_*.snap k8s-${{ matrix.patch }}.snap
      - name: Uploading snap
        uses: actions/upload-artifact@v4
        with:
          name: k8s-${{ matrix.patch }}.snap
          path: k8s-${{ matrix.patch }}.snap

  test-integration:
    needs: [ build ]
    name: Test ${{ matrix.patch }} ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu:20.04"]
        patch: ["strict", "moonray"]
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - name: Figure out target branch
        # ${{ steps.branch.outputs.upstream }} == "main", "release-1.30"
        # ${{ steps.branch.outputs.target }} == "moonray/main", "moonray/release-1.30"
        id: branch
        run: |
          echo "upstream=${{ github.base_ref }}" >> "$GITHUB_OUTPUT"
          echo "target=${{ matrix.patch }}/${{ github.base_ref }}" >> "$GITHUB_OUTPUT"
      - name: Checking out repo
        uses: actions/checkout@v4
      - name: Merge ${{ github.head_ref }} into ${{ steps.branch.outputs.target }}
        run: |
          git config user.name k8s-bot
          git config user.email k8s-bot@canonical.com

          git fetch origin

          git checkout ${{ github.head_ref }}
          git checkout ${{ steps.branch.outputs.target }}

          git merge ${{ github.head_ref }} -m "Auto-merge ${{ github.head_ref }}"
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch.outputs.target }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - name: Install tox
        run: pip install tox
      - name: Install lxd
        run: |
          sudo snap refresh lxd --channel 5.21/stable
          sudo lxd init --auto
          sudo usermod --append --groups lxd $USER
          sg lxd -c 'lxc version'
      - name: Download snap
        uses: actions/download-artifact@v4
        with:
          name: k8s-${{ matrix.patch }}.snap
          path: build
      - name: Run end to end tests
        run: |
          export TEST_SNAP="$PWD/build/k8s-${{ matrix.patch }}.snap"
          export TEST_SUBSTRATE=lxd
          export TEST_LXD_IMAGE=${{ matrix.os }}
          cd tests/integration && sg lxd -c 'tox -e integration'
