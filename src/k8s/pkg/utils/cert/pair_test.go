package cert

import (
	"testing"

	. "github.com/onsi/gomega"
)

func TestNewCertKeyPairFromPEM(t *testing.T) {
	certPEM := `-----BEGIN CERTIFICATE-----
MIIDzTCCArWgAwIBAgIQRkxzxTYJLDdSfdeGRE+IeTANBgkqhkiG9w0BAQsFADB2
MQswCQYDVQQGEwJHQjEJMAcGA1UECBMAMRIwEAYDVQQHEwlDYW5vbmljYWwxEjAQ
BgNVBAkTCUNhbm9uaWNhbDESMBAGA1UEChMJQ2Fub25pY2FsMRIwEAYDVQQLEwlD
YW5vbmljYWwxDDAKBgNVBAMTA2s4czAeFw0yNDAyMDIxMzM0MzFaFw0zNDAyMDIx
MzM0MzFaMHYxCzAJBgNVBAYTAkdCMQkwBwYDVQQIEwAxEjAQBgNVBAcTCUNhbm9u
aWNhbDESMBAGA1UECRMJQ2Fub25pY2FsMRIwEAYDVQQKEwlDYW5vbmljYWwxEjAQ
BgNVBAsTCUNhbm9uaWNhbDEMMAoGA1UEAxMDazhzMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA5yD+C2smIuZLoEYAyKzNpQ9ZQYAS3GbIV0Z/+sqplxgR
sv1ZXUhaO5SQPtaZL+1CMOno/OBnBP3GO/3aO746hdWPgNzQoNAOrOh3HUr7x5qV
SZbExd6igqNq9bGbn6F4zRdaxOeojcRxgaGAQVMm61nSy4owBtRFVmClOnjRKzpS
D5qR272i/7pNj38VPOfGSg5K1PHElE3OL/Dlw7DbQ0tkbMaIXip0i3+4xGUmyffW
OZJHbKLi+P+OGT+4OLKVB1GCWap41vhXWtGWvg7lqG5gru00iio5sgaXNs7tZ4dV
+TgxXCQ2ZhPLV3U6MiHqQiWf9MpBxmXnXfoNyLsnTwIDAQABo1cwVTAOBgNVHQ8B
Af8EBAMCBLAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMAwGA1UdEwEB
/wQCMAAwFgYDVR0RBA8wDYIFYmFzaWOHBH8AAAEwDQYJKoZIhvcNAQELBQADggEB
AKo7mE0T+4jS7RyphiMJLnEybf3dcEuSWP6nU39J8sGsCwR3Q0xCIimacI3jCJ6v
kkW4/hGtAlKgP0Ti5Q5XTm6MvthYzDCNPjalaS/H8l00mTPIgECan3XB6us+Bbwx
yaWoaaawsUannQhBfiN+xKy5CxqZ6zIJsJbsoxSC+K6se1LlkahcFIAUpcCAx5bG
KPhdcVmZ0GMdsOBBrdxCsto0ywPtEcug1zSml0+UTp7jSMHYeECERCuKKN1HJ5X6
PU2AtoaNVDwOsThQbRZ9c4iEUySAyK0300F11/8eZmc52uvTVdqHj2e2LvUNe3fU
pSy2WGTNK1Ybmhp0uvEdNxc=
-----END CERTIFICATE-----`

	keyPEM := `
-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA4IuXnCSBF4ce8HIILaQkygxbqchyEzlGQTNUGmHXJpz+kll+
7GxhiYaxj2GgwXJMJhwnfU7Gum+r12gMJn/J6tC48qDAoL0XljmrbNh9PTIIBUMJ
iw0FH5l7D0Webubd0fG5rKNGN13ZH5y6XsLUTRWweod4rS2hzHPZpprXMaTDL+RZ
w1vqeVqtcPU6L6TBGEEL7XztamRb9U48vt8aVJeqe2LIgdxa5LGDkHTNbZutgLfr
CgkRwYmGEsE1/CuaP0EVuKIoEaq4m/ZTIO0gSBPKN5HrV8TXarwSToz1uXywzyEw
1Y66bOW9N8x12JVv/DaY9R8h9+HCzZEzdVwJpwIDAQABAoIBADrq5cEGowi1X5zf
jt3K8AxD6dlGywfYQ2LgQPUbLwTmtLVZ3j/SwFUBjp18lF2ty+VEBeiPPv20R3ah
ym5foW+HjL+9Bk4mz4WPZDePJm1kL06SJHLj27BK6Us8jTG0SgfIUVvHC6mDanEt
AonSvTnssv2zhiqKiqXG0BkzD7vqbWitjhGKB0rp+tFSmWBtB+1u8owX63ApDYda
rTLbOXV2IxPqYtfRCMWsOfdd9VK7qjfkrhTRYLeqljwXjTQNr7ky9uqunaEmNFKk
3aM2Ov7rWr2ICd6rJEiA+h2YJhbB8a8gA8nJmx6dNP6iqw/XjtiZlGL70oYPf7yM
DpGwo0ECgYEA/50zbobAUoDLBQ2WJk5uQvUEQOYcM5I8IcDHUNePRkM8fVlvOHem
MySWqvdr9tRM3VZwlNKk87x+1Crw5NBGANA8GLAHx4t1Nwj3gZw1SazlH6wFHADR
XcUYqE/Sali3fDaW+ccZXx6UhSfRRAPzUE9/hfCMhCO2d/M4DQTaDokCgYEA4OJh
+db054OWqKMCBbi+UXB9KmFwNzF5EcP6FJyw41ySfTHyv1kszB/I6ZNCaWBOFZsF
U8/nR79wjfUvhCasURk6sxvu/byFGdPixEwmFvYUBfBxmuV+5PWIsnyzOYPI1NNZ
SD0+M3bstOEAlpv2pJXIVCfhyzyHJjrR/Nk0yq8CgYEAj77gqHxA9WSWRx4v3RTo
LuFI5hJBs8K97CFUNSMz4Eh5YOiFglTO8x3VWQnQ/jq/iw1MPHUE7EiJbllDpPl3
FIgF88Ayb8X+QdfaEFo/IVKIezoqmWfgVYI8bpKM+t8vODwexRJxMyuoTAVrSnuK
PhSm2zS+YKUQvP3a/H9I/TkCgYEAyDA+T43PDZjSMOSLFFTU9uJQSb3biwZ7ZBk1
Mcwamwr5TIF+OmBDxKI209bHM88LM6iAIY/drrz4kSZGWjmjA76VxoODSFTdl5RL
Nbsj3STJxk+4kc7iGyeHvHvNf9GUogBSZkA+csnXBV2WjHviH7lGT8QA+E61cI7E
B3XDzPkCgYB7UxW408teQhcnKl0/hu1H51AUHFXVsnlBudiQ1k/QW6GOGtOIGna5
dh+UY17lutiawCwXd09oT5+S1m/xyP9Z82l4NgcIh6W2V5d2OBqiWD3YcbdCTsBH
G8AemffxTnBGRlQGY01cveIfpOZ5VCqefDb4tkahGmpsr4LjsssaLw==
-----END RSA PRIVATE KEY-----`

	g := NewWithT(t)

	// Create CertKeyPair using NewCertKeyPairFromPEM function
	ckp, err := NewCertKeyPairFromPEM([]byte(certPEM), []byte(keyPEM))
	if err != nil {
		t.Fatal("Failed to create CertKeyPair from PEM:", err)
	}

	g.Expect(ckp.Cert.Subject.CommonName).To(Equal("k8s"))
	g.Expect(ckp.Cert.Issuer.Organization).To(Equal([]string{"Canonical"}))
	g.Expect(ckp.Cert.Issuer.Locality).To(Equal([]string{"Canonical"}))
	g.Expect(ckp.Cert.Issuer.Country).To(Equal([]string{"GB"}))
}
